@import "./variables";

html {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  color: $body-text;

}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  margin: 0;
  font-family: $body;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

h1, h2, h3, h4, h5, h6 {
  font-family: $title;
}

// Buttons
.btn {
  border-radius: 25px;
  padding: 10px 15px;
  display: inline-block;
  text-decoration: none;
  letter-spacing: 1.5px;
  color: white;
  transition: all 0.3s ease 0s;
  border: 0;
  &:hover {
    transform: translateY(-5px);
    cursor: pointer;
  }
}

.btn-primary {
  background: $theme-primary;
  &:hover {
    background: $theme-secondary;
  }
  &.clicked {
    background: $disabled;;
  }
}

.check {
  margin-right: 5px;
  display: inline-block;
}

.hidden {
  display: none;
}

.disabled {
  background: $disabled;
}

// Credit: https://codepen.io/jakob-e/pen/yVyYzv
// ==============================
// Font size mixin
// ==============================

//  default font scale bounding
$font-lock-min:  400px !default; 
$font-lock-max: 1000px !default;

//  font-size 
@mixin font-size(
  $min,                         // font-size 
  $max: null,                   // optional maximum font size
  $lock-min: $font-lock-min,  // optional minimum viewport width 
  $lock-max: $font-lock-max   // optional maximum viewport width 
  ){
    & { font-size: $min; }
    @if $max {
      @media (min-width: $lock-min) { 
        & { 
          font-size: calc(
            #{$min} + 
            #{num($max) - num($min)} * 
            (100vw - #{$lock-min}) / 
            #{num($lock-max) - num($lock-min)}
          ); 
        } 
      }
      @media (min-width: $lock-max){ 
        & { font-size: $max; } 
      }
    }
}

//  strip units helper function
@function num($input){ 
  @return $input/($input * 0 + 1); 
}
:root { @include font-size(16px, 21px); }

button {
  @include font-size(16px, 18px);
}